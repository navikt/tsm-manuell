name: Build & Deploy
on: push

env:
  APP: tsm-manuell

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  test-and-verify:
    name: Test & verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: navikt/tsm-workflows/actions/yarn@main
        with:
          READER_TOKEN: ${{ secrets.READER_TOKEN }}
      - run: yarn lint
      - run: yarn tsc

  build-dev:
    name: Build for dev
    runs-on: ubuntu-latest
    steps:
      - uses: navikt/tsm-workflows/actions/next/build@main
        id: next-build
        with:
          app: ${{ env.APP }}
          env: dev
          team: 'tsm'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      image: ${{ steps.next-build.outputs.image }}

  build-demo:
    if: github.ref_name == 'main' || startsWith(github.ref_name, 'demo')
    name: Build for demo
    runs-on: ubuntu-latest
    steps:
      - uses: navikt/tsm-workflows/actions/next/build@main
        id: next-build
        with:
          app: ${{ env.APP }}
          env: demo
          team: 'tsm'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      image: ${{ steps.next-build.outputs.image }}

  build-prod:
    name: Build for prod
    runs-on: ubuntu-latest
    steps:
      - uses: navikt/tsm-workflows/actions/next/build@main
        id: next-build
        with:
          app: ${{ env.APP }}
          env: prod
          team: 'tsm'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      image: ${{ steps.next-build.outputs.image }}

  deploy-dev-main:
    name: Deploy main to dev
    if: github.ref_name == 'main'
    environment:
      name: dev
      url: https://tsm-manuell.intern.dev.nav.no
    runs-on: ubuntu-latest
    needs: [build-dev, test-and-verify]
    steps:
      - uses: actions/checkout@v5
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-dev.yaml
          VAR: image=${{ needs.build-dev.outputs.image }}
          NAIS_DEPLOY_SUMMARY: false

  deploy-dev-branch:
    name: Deploy branch to dev
    if: startsWith(github.ref_name, 'dev/')
    environment:
      name: dev
      url: https://tsm-manuell.intern.dev.nav.no
    runs-on: ubuntu-latest
    needs: [build-dev, test-and-verify]
    steps:
      - uses: actions/checkout@v5
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-dev.yaml
          VAR: image=${{ needs.build-dev.outputs.image }}
          NAIS_DEPLOY_SUMMARY: false

  deploy-demo-main:
    if: github.ref_name == 'main'
    name: Deploy main to demo
    environment:
      name: demo-main
      url: https://${{ env.APP }}.ekstern.dev.nav.no
    runs-on: ubuntu-latest
    needs: [build-demo, test-and-verify]
    steps:
      - uses: actions/checkout@v5
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-demo.yaml
          VAR: image=${{ needs.build-demo.outputs.image }},ingress=https://${{ env.APP }}.ekstern.dev.nav.no,appname=${{ env.APP }},replicas=1,branchState=alive
          NAIS_DEPLOY_SUMMARY: false

  deploy-production:
    name: Deploy main to production
    if: github.ref_name == 'main'
    environment:
      name: production
      url: https://tsm-manuell.intern.nav.no
    runs-on: ubuntu-latest
    needs: [deploy-dev-main, build-prod]
    steps:
      - uses: actions/checkout@v5
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais-prod.yaml
          VAR: image=${{ needs.build-prod.outputs.image }}
          NAIS_DEPLOY_SUMMARY: false

  security:
    name: Security
    secrets: inherit
    permissions:
      contents: read
      id-token: write
      security-events: write
    needs: build-prod
    uses: navikt/tsm-workflows/.github/workflows/security.yaml@main
    with:
      image: ${{ needs.build-prod.outputs.image }}
      team: 'tsm'